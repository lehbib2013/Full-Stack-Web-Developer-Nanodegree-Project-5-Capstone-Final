"""empty message

Revision ID: 2e4d438cf22d
Revises: 
Create Date: 2022-01-21 03:38:38.502961

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2e4d438cf22d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('captain',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('bateau', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cashier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code_cashier', sa.String(), nullable=True),
    sa.Column('name_cashier', sa.String(), nullable=True),
    sa.Column('last_solde_opening', sa.Float(), nullable=False),
    sa.Column('last_solde_closing', sa.Float(), nullable=False),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('date_open', sa.DateTime(), nullable=False),
    sa.Column('date_close', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('distribution_policy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('designation', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('rate_company', sa.Float(), nullable=True),
    sa.Column('rate_captain', sa.Float(), nullable=True),
    sa.Column('amortization_rate', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pricing_specie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code_pricing', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('designation', sa.String(), nullable=True),
    sa.Column('famille', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cashier_journal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('mois', sa.Integer(), nullable=False),
    sa.Column('annee', sa.Integer(), nullable=False),
    sa.Column('cashier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cashier_id'], ['cashier.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('details_pricing_specie',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pricing_id', sa.Integer(), nullable=True),
    sa.Column('specie_id', sa.Integer(), nullable=True),
    sa.Column('border_quantity', sa.Float(), nullable=True),
    sa.Column('unit_price_calc_of_superior_quantity_for_captain', sa.Float(), nullable=True),
    sa.Column('unit_price_calc_of_inferior_quantity_for_captain', sa.Float(), nullable=True),
    sa.Column('unit_price_sale', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['pricing_id'], ['pricing_specie.id'], ),
    sa.ForeignKeyConstraint(['specie_id'], ['specie.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fishing_tied',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=False),
    sa.Column('date_departure', sa.DateTime(), nullable=False),
    sa.Column('date_arrival', sa.DateTime(), nullable=True),
    sa.Column('amount_gained_captain', sa.Float(), nullable=True),
    sa.Column('amount_gained_company', sa.Float(), nullable=True),
    sa.Column('total_estimate_price', sa.Float(), nullable=True),
    sa.Column('total_real_price', sa.Float(), nullable=True),
    sa.Column('retained_debt', sa.Float(), nullable=True),
    sa.Column('returned_asset', sa.Float(), nullable=True),
    sa.Column('previous_remained_debt', sa.Float(), nullable=True),
    sa.Column('previous_remained_asset', sa.Float(), nullable=True),
    sa.Column('policy_distribution_id', sa.Integer(), nullable=True),
    sa.Column('captain_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['captain_id'], ['captain.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice_supplier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('montant', sa.Float(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('ref', sa.String(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('capture',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('specie_name', sa.String(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('captain_unit_price', sa.Float(), nullable=True),
    sa.Column('unit_discount', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('unit_sale_price', sa.Float(), nullable=True),
    sa.Column('total_sale_price', sa.Float(), nullable=True),
    sa.Column('fishing_tied_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fishing_tied_id'], ['fishing_tied.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cashier_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_sens', sa.String(), nullable=False),
    sa.Column('transaction_type', sa.String(), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=False),
    sa.Column('transaction_reason', sa.String(), nullable=True),
    sa.Column('cash_amount', sa.Float(), nullable=True),
    sa.Column('journal_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['journal_id'], ['cashier_journal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Captain_payment_ct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ref_payment', sa.String(), nullable=True),
    sa.Column('fishing_tied', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fishing_tied'], ['fishing_tied.id'], ),
    sa.ForeignKeyConstraint(['id'], ['cashier_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('avance_ct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ref_avance', sa.String(), nullable=True),
    sa.Column('fishing_tied', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fishing_tied'], ['fishing_tied.id'], ),
    sa.ForeignKeyConstraint(['id'], ['cashier_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consumable_ct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('imputed_captain_share', sa.Float(), nullable=True),
    sa.Column('non_imputed_share', sa.Float(), nullable=True),
    sa.Column('fishing_tied', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fishing_tied'], ['fishing_tied.id'], ),
    sa.ForeignKeyConstraint(['id'], ['cashier_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('general_ct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fishing_tied', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fishing_tied'], ['fishing_tied.id'], ),
    sa.ForeignKeyConstraint(['id'], ['cashier_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ordinary_ct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['cashier_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('salary_ct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['cashier_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spartpart_ct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('imputed_captain_share', sa.Float(), nullable=True),
    sa.Column('non_imputed_share', sa.Float(), nullable=True),
    sa.Column('fishing_tied', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fishing_tied'], ['fishing_tied.id'], ),
    sa.ForeignKeyConstraint(['id'], ['cashier_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier_ct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('ref_invoice', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['cashier_transactions.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supply_ct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['cashier_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('supply_ct')
    op.drop_table('supplier_ct')
    op.drop_table('spartpart_ct')
    op.drop_table('salary_ct')
    op.drop_table('ordinary_ct')
    op.drop_table('general_ct')
    op.drop_table('consumable_ct')
    op.drop_table('avance_ct')
    op.drop_table('Captain_payment_ct')
    op.drop_table('cashier_transactions')
    op.drop_table('capture')
    op.drop_table('invoice_supplier')
    op.drop_table('fishing_tied')
    op.drop_table('details_pricing_specie')
    op.drop_table('cashier_journal')
    op.drop_table('supplier')
    op.drop_table('specie')
    op.drop_table('pricing_specie')
    op.drop_table('distribution_policy')
    op.drop_table('cashier')
    op.drop_table('captain')
    # ### end Alembic commands ###
